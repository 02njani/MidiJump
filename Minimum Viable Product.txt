Milestone status
Given that we didn’t originally know the timespan allotted to complete the MVP, our minimum functionality is not exactly to par with our proposal. From what we proposed, we were able to implement upwards scrolling, user control, “seamless jumping”, and correct audio feedback depending on collision with a corresponding platform. So essentially, we built the basic framework for the game. However, we were unable to complete the implementation of a point/score system as well as the ability to reach an end goal. Something we were able to accomplish that wasn’t originally proposed was deploying our game on to a web browser which we were able to achieve using Phaser 3 and the Liver Server extension in VSCode.

Surprises and challenges
One of our biggest initial challenges was determining which framework to use that would allow for both familiarity with the integrated programming language and implementation of the Google Magenta API. Another challenge we faced was not only playing a sound upon collision with a platform, but playing the sound that correctly coordinates with the platform generated by Magenta’s RNN model. And lastly, getting the platforms to move downwards while making new platforms appear at the top was a challenge as well. Ultimately, we decided on using Phaser 3 for a framework to build the game from which allowed us to use JavaScript and the Magenta libraries.

Design and concept changes
With the progress that we were able to make in the past few weeks, we still feel as though we will be able to reach our original goal. Some areas that may need to be reassessed are 1) the extent to which we can develop the art/style of the game as well as 2) its deployment into  a standalone website. These goals are being reconsidered because they are not absolutely vital to the overall completion of the game itself, and are goals that can easily be achieved/improved after meeting the more essential milestones. Therefore, while we are confident that we can accomplish the basic mechanics proposed for the game, some less necessary fulfillments such as overall polish may be thrown to the backburner.
It was mentioned in our concept proposal that we have to figure out how to balance the competitive parts of the game with the music. Our minimum viable product is not competitive at the moment, so we will need to consider this for our next round of edits.

Technical changes
Given what we proposed, we have not deviated much from our initially defined toolset. We stated that we intend on using “JavaScript, including the Magenta library,” and thus far, that is exactly what we have been doing. However, we have added a game framework to our toolset called Phaser. This essentially allows us to use premade libraries and functions to streamline and simplify the development process. Within the Phaser framework though, we are still using JavaScript and implementing the Magenta library as originally proposed.

Collaboration
One challenge of group collaboration was communication of updates and idea implementation. Because we are building a game, many of the individual tasks rely on us understanding how another member’s part functions. In situations where work was done outside of class or in subgroups, some members would have to catch up on any new content which could slow down the overall process. Nonetheless, we communicated effectively given the nature of the work we’re doing (programming, which most explanation comes in the form of code comments). Regarding contribution of all the members, we concluded that all of us contributed equally to the overall MVP. While some members may have made more significant breakthroughs or shared more helpful resources than others, we all put equal amounts of effort into brainstorming and ultimately writing the code.
